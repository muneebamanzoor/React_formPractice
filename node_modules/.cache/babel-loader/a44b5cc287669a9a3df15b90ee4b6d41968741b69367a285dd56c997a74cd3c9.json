{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\reactfirst\\\\src\\\\index.js\";\nimport React from \"react\";\n// var React = require(\"react\");\nimport ReactDOM from 'react-dom';\n// var ReactDOM = require(\"react-dom\");\n// ReactDOM.render('kya dikhana hai', 'kahan dikhana hai', 'callback func')\n\n// 1st Way of rendering \n// With the help of React we can use rendor method and with te help of ReactDOM we can use JSX\n// ReactDOM.render(\n//   <h1>Hello World</h1> , document.getElementById(\"root\")\n// );\n\n// 2nd Way of rendering \n// The code that Babel JS compile on the backend to make it understandable \n// import { jsx as _jsx } from \"react/jsx-runtime\";\n// ReactDOM.render( jsx(\"h1\", {\n//   children: \"Hello World\"\n// }), document.getElementById(\"root\"));\n\n// 3rd Way of rendering \n// Manually using only Javascript to create and render h1 element\n// var h1 = document.createElement('h1');\n// h1.innerHTML='Muneeba Manzoor';\n// document.getElementById('root').appendChild(h1)\n\n// ----------- Rendering Multiple Elements within a render() --------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Rendering two elements Together\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Use a div tag to wrap all the element tags into te main div tag\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 18\n}, this), document.getElementById('root'));\n\n//In v16.X.X of react, its possible for render to return an array of elements/\nReactDOM.render([/*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Rendering two elements Together\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"Use a div tag to wrap all the element tags into te main div tag\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this)], document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","render","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["D:/ReactCourse/reactfirst/src/index.js"],"sourcesContent":["import React from \"react\";\n// var React = require(\"react\");\nimport ReactDOM from 'react-dom';\n// var ReactDOM = require(\"react-dom\");\n// ReactDOM.render('kya dikhana hai', 'kahan dikhana hai', 'callback func')\n\n// 1st Way of rendering \n// With the help of React we can use rendor method and with te help of ReactDOM we can use JSX\n// ReactDOM.render(\n//   <h1>Hello World</h1> , document.getElementById(\"root\")\n// );\n\n// 2nd Way of rendering \n// The code that Babel JS compile on the backend to make it understandable \n// import { jsx as _jsx } from \"react/jsx-runtime\";\n// ReactDOM.render( jsx(\"h1\", {\n//   children: \"Hello World\"\n// }), document.getElementById(\"root\"));\n\n// 3rd Way of rendering \n// Manually using only Javascript to create and render h1 element\n// var h1 = document.createElement('h1');\n// h1.innerHTML='Muneeba Manzoor';\n// document.getElementById('root').appendChild(h1)\n\n// ----------- Rendering Multiple Elements within a render() --------------\nReactDOM.render( <div>\n  <h1>Rendering two elements Together</h1>\n  <p>Use a div tag to wrap all the element tags into te main div tag</p></div>\n  , document.getElementById('root'))\n\n//In v16.X.X of react, its possible for render to return an array of elements/\nReactDOM.render( [\n  <h1>Rendering two elements Together</h1>,\n  <p>Use a div tag to wrap all the element tags into te main div tag</p>,\n  ], document.getElementById('root'))"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,QAAQ,MAAM,WAAW;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,QAAQ,CAACG,MAAM,eAAED,OAAA;EAAAE,QAAA,gBACfF,OAAA;IAAAE,QAAA,EAAI;EAA+B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK,eACxCN,OAAA;IAAAE,QAAA,EAAG;EAA+D;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAM,EAC1EC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAEpC;AACAV,QAAQ,CAACG,MAAM,CAAE,cACfD,OAAA;EAAAE,QAAA,EAAI;AAA+B;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAK,eACxCN,OAAA;EAAAE,QAAA,EAAG;AAA+D;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAI,CACrE,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}