{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\SlotGame\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './index.css';\n\n// const App = () => {\n\n//     const state = useState();\n//     const [count , updatedCount] = useState(0);\n\n//         // console.log(state);\n\n//     const IncCount = () => {\n//         updatedCount(count-10);\n//         // console.log('clicked' + count++);\n\n// }\n\n// return(\n//     <>\n//     <h1>{count}</h1>\n//     <button onClick={IncCount}>Click Me</button>\n//     </>\n// )\n// }\n\n// const App = () => {\n\n//     const state = useState();\n//     const currentTime = new Date().toLocaleTimeString();\n//     const [currTime, updatedTime] = useState(currentTime);\n\n//     const BtnClk = () => {      \n//         const currentTime = new Date().toLocaleTimeString();\n//         updatedTime(currentTime);\n//     }\n\n//     return(\n//         <>\n//             <h1>{currTime}</h1>\n//             <button onClick={BtnClk}>Get Time</button>\n//         </>\n//     );\n// }\n\n// const App = () => {\n\n//     const currentTime = new Date().toLocaleTimeString();\n//     const [currTime, updatedTime] = useState(currentTime);\n\n//     const loopfunc = () => {\n//         const currentTime = new Date().toLocaleTimeString();\n//         updatedTime(currentTime);\n//     }\n\n//     setInterval( loopfunc , 1000)\n\n//     return(\n//         <>\n//             <h1>{currTime}</h1>\n//         </>\n//     );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const bgcolor = 'pink';\n  const textbtn = \"CLICK ME\";\n  const [bg, updatedbg] = useState(bgcolor);\n  const [text, updatedtext] = useState(textbtn);\n  const bgChange = () => {\n    updatedbg('purple');\n    updatedtext('TADA');\n  };\n  const dbChange = () => {\n    updatedbg('pink');\n    updatedtext('Click me');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: bg\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: bgChange,\n        onDoubleClick: dbChange,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"VSrxc8DlpfGA1wk8tTYDCOokKCc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","bgcolor","textbtn","bg","updatedbg","text","updatedtext","bgChange","dbChange","children","style","backgroundColor","onClick","onDoubleClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactCourse/SlotGame/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './index.css';\r\n\r\n    \r\n// const App = () => {\r\n\r\n//     const state = useState();\r\n//     const [count , updatedCount] = useState(0);\r\n    \r\n//         // console.log(state);\r\n\r\n//     const IncCount = () => {\r\n//         updatedCount(count-10);\r\n//         // console.log('clicked' + count++);\r\n\r\n// }\r\n\r\n// return(\r\n//     <>\r\n//     <h1>{count}</h1>\r\n//     <button onClick={IncCount}>Click Me</button>\r\n//     </>\r\n// )\r\n// }\r\n\r\n\r\n// const App = () => {\r\n\r\n//     const state = useState();\r\n//     const currentTime = new Date().toLocaleTimeString();\r\n//     const [currTime, updatedTime] = useState(currentTime);\r\n\r\n//     const BtnClk = () => {      \r\n//         const currentTime = new Date().toLocaleTimeString();\r\n//         updatedTime(currentTime);\r\n//     }\r\n\r\n//     return(\r\n//         <>\r\n//             <h1>{currTime}</h1>\r\n//             <button onClick={BtnClk}>Get Time</button>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n\r\n// const App = () => {\r\n    \r\n//     const currentTime = new Date().toLocaleTimeString();\r\n//     const [currTime, updatedTime] = useState(currentTime);\r\n\r\n//     const loopfunc = () => {\r\n//         const currentTime = new Date().toLocaleTimeString();\r\n//         updatedTime(currentTime);\r\n//     }\r\n\r\n//     setInterval( loopfunc , 1000)\r\n\r\n//     return(\r\n//         <>\r\n//             <h1>{currTime}</h1>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n\r\nconst App = () => {\r\n    \r\n    const bgcolor = 'pink';\r\n    const textbtn = \"CLICK ME\"\r\n    const [bg, updatedbg] = useState(bgcolor);\r\n    const [text, updatedtext] = useState(textbtn);\r\n\r\n    const bgChange = ()=>{\r\n       updatedbg('purple');\r\n       updatedtext('TADA');\r\n    }\r\n\r\n    const dbChange = ()=>{\r\n        updatedbg('pink');\r\n        updatedtext('Click me');\r\n     }\r\n    \r\n\r\n    return(\r\n        <>\r\n        <div style={{backgroundColor:bg}}>\r\n            <button onClick={bgChange} onDoubleClick={dbChange}>{text}</button> \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;;AAGpB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAMC,OAAO,GAAG,MAAM;EACtB,MAAMC,OAAO,GAAG,UAAU;EAC1B,MAAM,CAACC,EAAE,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAACO,OAAO,CAAC;EACzC,MAAM,CAACI,IAAI,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACQ,OAAO,CAAC;EAE7C,MAAMK,QAAQ,GAAGA,CAAA,KAAI;IAClBH,SAAS,CAAC,QAAQ,CAAC;IACnBE,WAAW,CAAC,MAAM,CAAC;EACtB,CAAC;EAED,MAAME,QAAQ,GAAGA,CAAA,KAAI;IACjBJ,SAAS,CAAC,MAAM,CAAC;IACjBE,WAAW,CAAC,UAAU,CAAC;EAC1B,CAAC;EAGF,oBACIV,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACAb,OAAA;MAAKc,KAAK,EAAE;QAACC,eAAe,EAACR;MAAE,CAAE;MAAAM,QAAA,eAC7Bb,OAAA;QAAQgB,OAAO,EAAEL,QAAS;QAACM,aAAa,EAAEL,QAAS;QAAAC,QAAA,EAAEJ;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAU;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjE,iBACH;AAEX,CAAC;AAAAjB,EAAA,CAzBKD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA2BT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}