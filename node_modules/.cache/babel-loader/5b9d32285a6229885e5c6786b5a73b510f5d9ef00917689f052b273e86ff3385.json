{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\SlotGame\\\\src\\\\TwoInputsForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// ---------- Login Form Submit in ReactJS #35 ------------\n// const TwoInputsForm = () =>{\n\n// const [text , settext] = useState('')\n// const [fulltext , updatedfulltext] = useState('')\n// const nameinp = (event)=>{\n//     settext(event.target.value);\n// }\n\n// const [degree, setdegree] = useState('')\n// const [fulldegree, updatedfulldegree] = useState('')\n// const degreeinput = (event) =>{\n//     setdegree(event.target.value);\n// }\n\n// const btnClk = () =>{\n//     updatedfulltext(text);\n//     updatedfulldegree(degree);\n// }\n\n// return(\n//     <>\n//     <div>\n//         <h1>Hello, {fulldegree} {fulltext}!</h1>\n//         <input placeholder=\"Enter Your Name\" type=\"text\" onChange={nameinp} value={text}></input>\n//         <input Placeholder=\"Enter Your Degree\" type=\"text\" onChange={degreeinput} value={degree}></input>\n//         <button onClick={btnClk}>Submit</button>\n//     </div>\n//     </>\n// );\n\n// }\n\n// ------------- Handling Complex Multiple Events ---------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TwoInputsForm = () => {\n  _s();\n  const [text, settext] = useState('');\n  const [fulltext, updatedfulltext] = useState('');\n  const InputEvent = event => {\n    settext(event.target.value);\n  };\n  const btnClk = event => {\n    updatedfulldegree(degree);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: btnClk,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello, \", fulldegree, \" \", fulltext, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Your Name\",\n          type: \"text\",\n          onChange: InputEvent,\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          Placeholder: \"Enter Your Degree\",\n          type: \"text\",\n          onChange: degreeinput,\n          value: degree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(TwoInputsForm, \"wk1xXLYrFQpmZG8+BO0cC75Ii7E=\");\n_c = TwoInputsForm;\nexport default TwoInputsForm;\nvar _c;\n$RefreshReg$(_c, \"TwoInputsForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TwoInputsForm","_s","text","settext","fulltext","updatedfulltext","InputEvent","event","target","value","btnClk","updatedfulldegree","degree","children","onSubmit","fulldegree","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","Placeholder","degreeinput","_c","$RefreshReg$"],"sources":["D:/ReactCourse/SlotGame/src/TwoInputsForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\n// ---------- Login Form Submit in ReactJS #35 ------------\r\n// const TwoInputsForm = () =>{\r\n\r\n    // const [text , settext] = useState('')\r\n    // const [fulltext , updatedfulltext] = useState('')\r\n    // const nameinp = (event)=>{\r\n    //     settext(event.target.value);\r\n    // }\r\n    \r\n    // const [degree, setdegree] = useState('')\r\n    // const [fulldegree, updatedfulldegree] = useState('')\r\n    // const degreeinput = (event) =>{\r\n    //     setdegree(event.target.value);\r\n    // }\r\n\r\n    // const btnClk = () =>{\r\n    //     updatedfulltext(text);\r\n    //     updatedfulldegree(degree);\r\n    // }\r\n\r\n\r\n    // return(\r\n    //     <>\r\n    //     <div>\r\n    //         <h1>Hello, {fulldegree} {fulltext}!</h1>\r\n    //         <input placeholder=\"Enter Your Name\" type=\"text\" onChange={nameinp} value={text}></input>\r\n    //         <input Placeholder=\"Enter Your Degree\" type=\"text\" onChange={degreeinput} value={degree}></input>\r\n    //         <button onClick={btnClk}>Submit</button>\r\n    //     </div>\r\n    //     </>\r\n    // );\r\n\r\n// }\r\n\r\n\r\n\r\n// ------------- Handling Complex Multiple Events ---------------\r\nconst TwoInputsForm = () =>{\r\n\r\n    const [text , settext] = useState('')\r\n    const [fulltext , updatedfulltext] = useState('')\r\n    const InputEvent = (event)=>{\r\n        settext(event.target.value);\r\n    }\r\n\r\n    const btnClk = (event) =>{\r\n        updatedfulldegree(degree);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={btnClk}>\r\n        <div>\r\n            <h1>Hello, {fulldegree} {fulltext}!</h1>\r\n            <input placeholder=\"Enter Your Name\" type=\"text\" onChange={InputEvent} value={text}></input>\r\n            <input Placeholder=\"Enter Your Degree\" type=\"text\" onChange={degreeinput} value={degree}></input>\r\n            <button>Submit</button>\r\n        </div>\r\n        </form>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default TwoInputsForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAIvC;AACA;;AAEI;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEJ;;AAIA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAEvB,MAAM,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACS,QAAQ,EAAGC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAMW,UAAU,GAAIC,KAAK,IAAG;IACxBJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,MAAM,GAAIH,KAAK,IAAI;IACrBI,iBAAiB,CAACC,MAAM,CAAC;EAC7B,CAAC;EAED,oBACIf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACAhB,OAAA;MAAMiB,QAAQ,EAAEJ,MAAO;MAAAG,QAAA,eACvBhB,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAAgB,QAAA,GAAI,SAAO,EAACE,UAAU,EAAC,GAAC,EAACX,QAAQ,EAAC,GAAC;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxCtB,OAAA;UAAOuB,WAAW,EAAC,iBAAiB;UAACC,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAEhB,UAAW;UAACG,KAAK,EAAEP;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAC5FtB,OAAA;UAAO0B,WAAW,EAAC,mBAAmB;UAACF,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAEE,WAAY;UAACf,KAAK,EAAEG;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACjGtB,OAAA;UAAAgB,QAAA,EAAQ;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACrB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC,iBACJ;AAGX,CAAC;AAAAlB,EAAA,CAzBKD,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}