{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\reactfirst\\\\src\\\\index.js\";\nimport React from \"react\"; // var React = require(\"react\");\nimport ReactDOM from 'react-dom'; // var ReactDOM = require(\"react-dom\");\nimport \"./index.css\";\n\n// ReactDOM.render('kya dikhana hai', 'kahan dikhana hai', 'callback func')\n// 1st Way of rendering \n// With the help of React we can use rendor method and with te help of ReactDOM we can use JSX\n// ReactDOM.render(\n//   <h1>Hello World</h1> , document.getElementById(\"root\")\n// );\n\n// 2nd Way of rendering \n// The code that Babel JS compile on the backend to make it understandable \n// import { jsx as _jsx } from \"react/jsx-runtime\";\n// ReactDOM.render( jsx(\"h1\", {\n//   children: \"Hello World\"\n// }), document.getElementById(\"root\"));\n\n// 3rd Way of rendering \n// Manually using only Javascript to create and render h1 element\n// var h1 = document.createElement('h1');\n// h1.innerHTML='Muneeba Manzoor';\n// document.getElementById('root').appendChild(h1)\n\n// // ----------- Rendering Multiple Elements within a render() --------------\n// ReactDOM.render( \n//   <div>\n//   <h1>Rendering two elements Together</h1>\n//   <p>Use a div tag to wrap all the element tags into te main div tag</p>\n//   </div> , document.getElementById('root'))\n\n// In v16.X.X of react, its possible for render to return an array of elements/\n// ReactDOM.render( [\n//   <h1>Rendering two elements Together with the help of Array</h1>,\n//   <p>Use a Square Bracket to wrap all the element tags into the main div tag separated by commas</p>,\n//   ], document.getElementById('root'))\n\n// // --------- React.Fragment -----------\n// ReactDOM.render( \n//   <React.Fragment>\n//   <h1>Rendering two elements Together</h1>\n//   <p>Use a React.Fragment tag or empty tags \"< ></>\" to wrap all the element tags into te main tag</p>\n//   </React.Fragment> , document.getElementById('root'))\n\n// // ---------- Challenge Time ------------\n// ReactDOM.render(\n//   <>\n//     <h1>Netflix Series</h1>\n//     <p>A list of top 5 series on Netflix:</p>\n//     <ol>\n//       <li>Prison Break</li>\n//       <li>Money Heist</li>\n//       <li>YOU</li>\n//       <li>Breaking Bad</li>\n//       <li>Farzi</li>\n//     </ol>\n//   </>\n//   , document.getElementById('root')\n// )\n\n// ----------- Using JS expressions in JSX using {} -----------\n// We can not write statements in {}\n// var myname = \"Muneeba Manzoor\";\n// ReactDOM.render( \n//   <>\n//   <h1>JSX Expression</h1>\n//   <p>My name is {myname}</p>\n//   <p>The sum of two numbers is {2+3}</p>\n//   <p>A random number {Math.random()}</p>\n//   </> , document.getElementById('root'));\n\n// ------------ Template Literals ------------\n// var myname = \"Muneeba Manzoor\";\n// var myAge=23;\n// ReactDOM.render( \n//   <>\n//   <h1>JSX Expression</h1>\n//   <p>My name is {`${myname} and my age is ${myAge}`}</p>\n//   <p>My name is {myname} and my age is {myAge}</p>\n//   <p>{myname + myAge}</p>\n//   </> , document.getElementById('root'));\n\n// -------- Challenge Time-----------\n// var currdatetime = new Date();\n// var currdate = currdatetime.toLocaleDateString();\n// var currtime = currdatetime.toLocaleTimeString();\n// var myName = \"Muneeba Manzoor\"\n// ReactDOM.render( \n//   <>\n//     <h1>My Name is {myName}</h1>\n//     <p>{`The current date is ${currdate}`}</p>\n//     <p>{`The current time is ${currtime}`}</p>\n//   </> , document.getElementById(\"root\")\n// );\n\n// ------------ JSX Attributes --------------\n// const img1 = \"https://picsum.photos/200/300\";\n// const img2 = \"https://picsum.photos/250/300\";\n// const img3 = \"https://picsum.photos/300/300\";\n// const img4 = \"https://picsum.photos/400/300\";\n// const weblink = \"https://www.facebook.com/\"\n// ReactDOM.render(\n//   <>\n//   <p contentEditable=\"true\">This part is all about JSX Attributes</p>\n//   <img src={img1} alt=\"RandomImage\" />\n//   <img src={img2} alt=\"RandomImage\" />\n//   <img src={img3} alt=\"RandomImage\" />\n//   <a href={weblink}><img src={img4} alt=\"RandomImage\" /></a>\n//   </> , document.getElementById(\"root\"));\n\n// ---------- CSS Styling and importing CSS files --------------\n// const img1 = \"https://picsum.photos/200/300\";\n// const img2 = \"https://picsum.photos/250/300\";\n// const img3 = \"https://picsum.photos/300/300\";\n// const img4 = \"https://picsum.photos/400/300\";\n// const weblink = \"https://www.facebook.com/\"\n// ReactDOM.render(\n//   <>\n//   <h1 className=\"para\">This part is all about JSX Attributes</h1>\n//   <div className=\"image-div\">\n//   <img src={img1} alt=\"RandomImage\" />\n//   <img src={img2} alt=\"RandomImage\" />\n//   <img src={img3} alt=\"RandomImage\" />\n//   <a href={weblink}><img src={img4} alt=\"RandomImage\" /></a>\n//   </div>\n//   </> , document.getElementById(\"root\"));\n\n//-------- Inline and Internal CSS -----------\n// .para{\n// text-align: center;\n// color: brown;\n// text-transform: capitalize;\n// font-weight: bold;\n// text-shadow: 0px 2px 4px rgb(224, 67, 20);\n// margin: 50px 0;\n// font-family: 'Josefin Sans', sans-serif;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst heading = {\n  textAlign: 'center',\n  color: 'brown',\n  textTransform: 'capitalize',\n  fontWeight: 'bold',\n  textShadow: '0px 2px 4px rgb(224, 67, 20)',\n  margin: '50px 0',\n  fontFamily: \"'Josefin Sans', sans-serif\"\n};\nconst img1 = \"https://picsum.photos/200/300\";\nconst img2 = \"https://picsum.photos/250/300\";\nconst img3 = \"https://picsum.photos/300/300\";\nconst img4 = \"https://picsum.photos/400/300\";\nconst weblink = \"https://www.facebook.com/\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    style: heading,\n    children: \"This part is all about JSX Attributes\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img1,\n      alt: \"RandomImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img2,\n      alt: \"RandomImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img3,\n      alt: \"RandomImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: weblink,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img4,\n        alt: \"RandomImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 3\n  }, this)]\n}, void 0, true), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","heading","textAlign","color","textTransform","fontWeight","textShadow","margin","fontFamily","img1","img2","img3","img4","weblink","render","children","style","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","href","document","getElementById"],"sources":["D:/ReactCourse/reactfirst/src/index.js"],"sourcesContent":["import React from \"react\"; // var React = require(\"react\");\nimport ReactDOM from 'react-dom'; // var ReactDOM = require(\"react-dom\");\nimport \"./index.css\"\n\n\n// ReactDOM.render('kya dikhana hai', 'kahan dikhana hai', 'callback func')\n// 1st Way of rendering \n// With the help of React we can use rendor method and with te help of ReactDOM we can use JSX\n// ReactDOM.render(\n//   <h1>Hello World</h1> , document.getElementById(\"root\")\n// );\n\n// 2nd Way of rendering \n// The code that Babel JS compile on the backend to make it understandable \n// import { jsx as _jsx } from \"react/jsx-runtime\";\n// ReactDOM.render( jsx(\"h1\", {\n//   children: \"Hello World\"\n// }), document.getElementById(\"root\"));\n\n// 3rd Way of rendering \n// Manually using only Javascript to create and render h1 element\n// var h1 = document.createElement('h1');\n// h1.innerHTML='Muneeba Manzoor';\n// document.getElementById('root').appendChild(h1)\n\n// // ----------- Rendering Multiple Elements within a render() --------------\n// ReactDOM.render( \n//   <div>\n//   <h1>Rendering two elements Together</h1>\n//   <p>Use a div tag to wrap all the element tags into te main div tag</p>\n//   </div> , document.getElementById('root'))\n\n// In v16.X.X of react, its possible for render to return an array of elements/\n// ReactDOM.render( [\n//   <h1>Rendering two elements Together with the help of Array</h1>,\n//   <p>Use a Square Bracket to wrap all the element tags into the main div tag separated by commas</p>,\n//   ], document.getElementById('root'))\n\n// // --------- React.Fragment -----------\n// ReactDOM.render( \n//   <React.Fragment>\n//   <h1>Rendering two elements Together</h1>\n//   <p>Use a React.Fragment tag or empty tags \"< ></>\" to wrap all the element tags into te main tag</p>\n//   </React.Fragment> , document.getElementById('root'))\n\n// // ---------- Challenge Time ------------\n// ReactDOM.render(\n//   <>\n//     <h1>Netflix Series</h1>\n//     <p>A list of top 5 series on Netflix:</p>\n//     <ol>\n//       <li>Prison Break</li>\n//       <li>Money Heist</li>\n//       <li>YOU</li>\n//       <li>Breaking Bad</li>\n//       <li>Farzi</li>\n//     </ol>\n//   </>\n//   , document.getElementById('root')\n// )\n\n// ----------- Using JS expressions in JSX using {} -----------\n// We can not write statements in {}\n// var myname = \"Muneeba Manzoor\";\n// ReactDOM.render( \n//   <>\n//   <h1>JSX Expression</h1>\n//   <p>My name is {myname}</p>\n//   <p>The sum of two numbers is {2+3}</p>\n//   <p>A random number {Math.random()}</p>\n//   </> , document.getElementById('root'));\n\n// ------------ Template Literals ------------\n// var myname = \"Muneeba Manzoor\";\n// var myAge=23;\n// ReactDOM.render( \n//   <>\n//   <h1>JSX Expression</h1>\n//   <p>My name is {`${myname} and my age is ${myAge}`}</p>\n//   <p>My name is {myname} and my age is {myAge}</p>\n//   <p>{myname + myAge}</p>\n//   </> , document.getElementById('root'));\n\n// -------- Challenge Time-----------\n// var currdatetime = new Date();\n// var currdate = currdatetime.toLocaleDateString();\n// var currtime = currdatetime.toLocaleTimeString();\n// var myName = \"Muneeba Manzoor\"\n// ReactDOM.render( \n//   <>\n//     <h1>My Name is {myName}</h1>\n//     <p>{`The current date is ${currdate}`}</p>\n//     <p>{`The current time is ${currtime}`}</p>\n//   </> , document.getElementById(\"root\")\n// );\n\n// ------------ JSX Attributes --------------\n// const img1 = \"https://picsum.photos/200/300\";\n// const img2 = \"https://picsum.photos/250/300\";\n// const img3 = \"https://picsum.photos/300/300\";\n// const img4 = \"https://picsum.photos/400/300\";\n// const weblink = \"https://www.facebook.com/\"\n// ReactDOM.render(\n//   <>\n//   <p contentEditable=\"true\">This part is all about JSX Attributes</p>\n//   <img src={img1} alt=\"RandomImage\" />\n//   <img src={img2} alt=\"RandomImage\" />\n//   <img src={img3} alt=\"RandomImage\" />\n//   <a href={weblink}><img src={img4} alt=\"RandomImage\" /></a>\n//   </> , document.getElementById(\"root\"));\n\n// ---------- CSS Styling and importing CSS files --------------\n// const img1 = \"https://picsum.photos/200/300\";\n// const img2 = \"https://picsum.photos/250/300\";\n// const img3 = \"https://picsum.photos/300/300\";\n// const img4 = \"https://picsum.photos/400/300\";\n// const weblink = \"https://www.facebook.com/\"\n// ReactDOM.render(\n//   <>\n//   <h1 className=\"para\">This part is all about JSX Attributes</h1>\n//   <div className=\"image-div\">\n//   <img src={img1} alt=\"RandomImage\" />\n//   <img src={img2} alt=\"RandomImage\" />\n//   <img src={img3} alt=\"RandomImage\" />\n//   <a href={weblink}><img src={img4} alt=\"RandomImage\" /></a>\n//   </div>\n//   </> , document.getElementById(\"root\"));\n\n//-------- Inline and Internal CSS -----------\n// .para{\n  // text-align: center;\n  // color: brown;\n  // text-transform: capitalize;\n  // font-weight: bold;\n  // text-shadow: 0px 2px 4px rgb(224, 67, 20);\n  // margin: 50px 0;\n  // font-family: 'Josefin Sans', sans-serif;\n// }\n\nconst heading = {   textAlign: 'center',\n  color: 'brown',\n  textTransform: 'capitalize',\n  fontWeight: 'bold',\n  textShadow: '0px 2px 4px rgb(224, 67, 20)',\n  margin: '50px 0',\n  fontFamily: \"'Josefin Sans', sans-serif\"\n}\n\nconst img1 = \"https://picsum.photos/200/300\";\nconst img2 = \"https://picsum.photos/250/300\";\nconst img3 = \"https://picsum.photos/300/300\";\nconst img4 = \"https://picsum.photos/400/300\";\nconst weblink = \"https://www.facebook.com/\"\nReactDOM.render(\n  <>\n  <h1 style={heading}>This part is all about JSX Attributes</h1>\n  <div className=\"image-div\">\n  <img src={img1} alt=\"RandomImage\" />\n  <img src={img2} alt=\"RandomImage\" />\n  <img src={img3} alt=\"RandomImage\" />\n  <a href={weblink}><img src={img4} alt=\"RandomImage\" /></a>\n  </div>\n  </> , document.getElementById(\"root\"));"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,QAAQ,MAAM,WAAW,CAAC,CAAC;AAClC,OAAO,aAAa;;AAGprCC,KAAK,EAAE,OAAO;EACdC,aAAa,EAAE,YAAY;EAC3BC,UAAU,EAAE,MAAM;EAClBC,UAAU,EAAE,8BAA8B;EAC1CC,MAAM,EAAE,QAAQ;EAChBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,IAAI,GAAG,+BAA+B;AAC5C,MAAMC,IAAI,GAAG,+BAA+B;AAC5C,MAAMC,IAAI,GAAG,+BAA+B;AAC5C,MAAMC,IAAI,GAAG,+BAA+B;AAC5C,MAAMC,OAAO,GAAG,2BAA2B;AAC3CjB,QAAQ,CAACkB,MAAM,eACbhB,OAAA,CAAAE,SAAA;EAAAe,QAAA,gBACAjB,OAAA;IAAIkB,KAAK,EAAEf,OAAQ;IAAAc,QAAA,EAAC;EAAqC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK,eAC9DtB,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAN,QAAA,gBAC1BjB,OAAA;MAAKwB,GAAG,EAAEb,IAAK;MAACc,GAAG,EAAC;IAAa;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACpCtB,OAAA;MAAKwB,GAAG,EAAEZ,IAAK;MAACa,GAAG,EAAC;IAAa;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACpCtB,OAAA;MAAKwB,GAAG,EAAEX,IAAK;MAACY,GAAG,EAAC;IAAa;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACpCtB,OAAA;MAAG0B,IAAI,EAAEX,OAAQ;MAAAE,QAAA,eAACjB,OAAA;QAAKwB,GAAG,EAAEV,IAAK;QAACW,GAAG,EAAC;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpD;AAAA,gBACH,EAAGK,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}