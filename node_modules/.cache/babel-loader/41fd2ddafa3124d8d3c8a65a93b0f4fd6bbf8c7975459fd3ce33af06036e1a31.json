{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\SlotGame\\\\src\\\\TwoInputsForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// ---------- Login Form Submit in ReactJS #35 ------------\n// const TwoInputsForm = () =>{\n\n// const [text , settext] = useState('')\n// const [fulltext , updatedfulltext] = useState('')\n// const nameinp = (event)=>{\n//     settext(event.target.value);\n// }\n\n// const [degree, setdegree] = useState('')\n// const [fulldegree, updatedfulldegree] = useState('')\n// const degreeinput = (event) =>{\n//     setdegree(event.target.value);\n// }\n\n// const btnClk = () =>{\n//     updatedfulltext(text);\n//     updatedfulldegree(degree);\n// }\n\n// return(\n//     <>\n//     <div>\n//         <h1>Hello, {fulldegree} {fulltext}!</h1>\n//         <input placeholder=\"Enter Your Name\" type=\"text\" onChange={nameinp} value={text}></input>\n//         <input Placeholder=\"Enter Your Degree\" type=\"text\" onChange={degreeinput} value={degree}></input>\n//         <button onClick={btnClk}>Submit</button>\n//     </div>\n//     </>\n// );\n\n// }\n\n// ------------- Handling Complex Multiple Events ---------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TwoInputsForm = () => {\n  _s();\n  const [fullname, setfullname] = useState({\n    fname: '',\n    lname: '',\n    email: ''\n  });\n  const InputEvent = event => {\n    // console.log(event.target.value);\n    // console.log(event.target.name);\n\n    const value = event.target.value;\n    const name = event.target.name;\n    setfullname(prevvalue => {\n      // console.log(prevvalue);\n      if (name === 'fname') {\n        return {\n          fname: value,\n          lname: prevvalue.lname\n        };\n      } else if (name === 'lname') {\n        return {\n          fname: prevvalue.fname,\n          lname: value\n        };\n      } else if (name === 'email') {\n        return {\n          fname: prevvalue.email,\n          lname: value\n        };\n      }\n    });\n  };\n  const btnClk = event => {\n    event.preventDefault();\n\n    // setfullname({fname:first, lname:last})\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: btnClk,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello, \", fullname.fname, fullname.lname, \"}\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Your First Name\",\n          type: \"text\",\n          onChange: InputEvent,\n          name: \"fname\"\n          // value={fullname.fname}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          Placeholder: \"Enter Your Last Name\",\n          type: \"text\",\n          onChange: InputEvent,\n          name: \"lname\"\n          // value={fullname.lname}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          Placeholder: \"Enter Your Email\",\n          type: \"text\",\n          onChange: InputEvent,\n          name: \"email\"\n          // value={fullname.lname}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(TwoInputsForm, \"MxRuyVfbXq2DYJrX9noEK+2XLUc=\");\n_c = TwoInputsForm;\nexport default TwoInputsForm;\nvar _c;\n$RefreshReg$(_c, \"TwoInputsForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TwoInputsForm","_s","fullname","setfullname","fname","lname","email","InputEvent","event","value","target","name","prevvalue","btnClk","preventDefault","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","Placeholder","_c","$RefreshReg$"],"sources":["D:/ReactCourse/SlotGame/src/TwoInputsForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\n// ---------- Login Form Submit in ReactJS #35 ------------\r\n// const TwoInputsForm = () =>{\r\n\r\n    // const [text , settext] = useState('')\r\n    // const [fulltext , updatedfulltext] = useState('')\r\n    // const nameinp = (event)=>{\r\n    //     settext(event.target.value);\r\n    // }\r\n    \r\n    // const [degree, setdegree] = useState('')\r\n    // const [fulldegree, updatedfulldegree] = useState('')\r\n    // const degreeinput = (event) =>{\r\n    //     setdegree(event.target.value);\r\n    // }\r\n\r\n    // const btnClk = () =>{\r\n    //     updatedfulltext(text);\r\n    //     updatedfulldegree(degree);\r\n    // }\r\n\r\n\r\n    // return(\r\n    //     <>\r\n    //     <div>\r\n    //         <h1>Hello, {fulldegree} {fulltext}!</h1>\r\n    //         <input placeholder=\"Enter Your Name\" type=\"text\" onChange={nameinp} value={text}></input>\r\n    //         <input Placeholder=\"Enter Your Degree\" type=\"text\" onChange={degreeinput} value={degree}></input>\r\n    //         <button onClick={btnClk}>Submit</button>\r\n    //     </div>\r\n    //     </>\r\n    // );\r\n\r\n// }\r\n\r\n\r\n\r\n// ------------- Handling Complex Multiple Events ---------------\r\nconst TwoInputsForm = () =>{\r\n\r\n    const [fullname , setfullname] = useState({\r\n        fname : '',\r\n        lname : '',\r\n        email : ''\r\n    })\r\n\r\n    const InputEvent = (event)=>{\r\n        // console.log(event.target.value);\r\n        // console.log(event.target.name);\r\n\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        setfullname((prevvalue)=>{\r\n            // console.log(prevvalue);\r\n            if(name==='fname'){\r\n                return{\r\n                    fname: value,\r\n                    lname: prevvalue.lname\r\n                }\r\n            }\r\n            else if(name==='lname'){\r\n                return{\r\n                    fname: prevvalue.fname,\r\n                    lname: value\r\n                }\r\n            }\r\n            else if(name==='email'){\r\n                return{\r\n                    fname: prevvalue.email,\r\n                    lname: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const btnClk = (event) =>{\r\n        event.preventDefault();\r\n\r\n        // setfullname({fname:first, lname:last})\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={btnClk}>\r\n        <div>\r\n            <h1>Hello, {fullname.fname}{fullname.lname}{}}</h1>\r\n            <input \r\n                placeholder=\"Enter Your First Name\" \r\n                type=\"text\" onChange={InputEvent} \r\n                name=\"fname\" \r\n                // value={fullname.fname}\r\n            ></input>\r\n            <input \r\n                Placeholder=\"Enter Your Last Name\" \r\n                type=\"text\" onChange={InputEvent} \r\n                name=\"lname\" \r\n                // value={fullname.lname}\r\n            ></input>\r\n            <input \r\n                Placeholder=\"Enter Your Email\" \r\n                type=\"text\" onChange={InputEvent} \r\n                name=\"email\" \r\n                // value={fullname.lname}\r\n            ></input>\r\n            <button>Submit</button>\r\n        </div>\r\n        </form>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default TwoInputsForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}