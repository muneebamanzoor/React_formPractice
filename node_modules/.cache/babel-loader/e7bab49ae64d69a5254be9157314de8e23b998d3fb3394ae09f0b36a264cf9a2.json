{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\SlotGame\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './index.css';\n\n// const App = () => {\n\n//     const state = useState();\n//     const [count , updatedCount] = useState(0);\n\n//         // console.log(state);\n\n//     const IncCount = () => {\n//         updatedCount(count-10);\n//         // console.log('clicked' + count++);\n\n// }\n\n// return(\n//     <>\n//     <h1>{count}</h1>\n//     <button onClick={IncCount}>Click Me</button>\n//     </>\n// )\n// }\n\n// const App = () => {\n\n//     const state = useState();\n//     const currentTime = new Date().toLocaleTimeString();\n//     const [currTime, updatedTime] = useState(currentTime);\n\n//     const BtnClk = () => {      \n//         const currentTime = new Date().toLocaleTimeString();\n//         updatedTime(currentTime);\n//     }\n\n//     return(\n//         <>\n//             <h1>{currTime}</h1>\n//             <button onClick={BtnClk}>Get Time</button>\n//         </>\n//     );\n// }\n\n// const App = () => {\n\n//     const currentTime = new Date().toLocaleTimeString();\n//     const [currTime, updatedTime] = useState(currentTime);\n\n//     const loopfunc = () => {\n//         const currentTime = new Date().toLocaleTimeString();\n//         updatedTime(currentTime);\n//     }\n\n//     setInterval( loopfunc , 1000)\n\n//     return(\n//         <>\n//             <h1>{currTime}</h1>\n//         </>\n//     );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const bgcolor = 'purple';\n  const [bg, updatedbg] = useState(bgcolor);\n  const bgChange = () => {\n    updatedbg('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: bgcolor\n        },\n        onClick: bgChange,\n        children: \"Click Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"6ruCMdzdomzzwAGen5U/55OfLjI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","bgcolor","bg","updatedbg","bgChange","children","style","backgroundColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactCourse/SlotGame/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './index.css';\r\n\r\n    \r\n// const App = () => {\r\n\r\n//     const state = useState();\r\n//     const [count , updatedCount] = useState(0);\r\n    \r\n//         // console.log(state);\r\n\r\n//     const IncCount = () => {\r\n//         updatedCount(count-10);\r\n//         // console.log('clicked' + count++);\r\n\r\n// }\r\n\r\n// return(\r\n//     <>\r\n//     <h1>{count}</h1>\r\n//     <button onClick={IncCount}>Click Me</button>\r\n//     </>\r\n// )\r\n// }\r\n\r\n\r\n// const App = () => {\r\n\r\n//     const state = useState();\r\n//     const currentTime = new Date().toLocaleTimeString();\r\n//     const [currTime, updatedTime] = useState(currentTime);\r\n\r\n//     const BtnClk = () => {      \r\n//         const currentTime = new Date().toLocaleTimeString();\r\n//         updatedTime(currentTime);\r\n//     }\r\n\r\n//     return(\r\n//         <>\r\n//             <h1>{currTime}</h1>\r\n//             <button onClick={BtnClk}>Get Time</button>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n\r\n// const App = () => {\r\n    \r\n//     const currentTime = new Date().toLocaleTimeString();\r\n//     const [currTime, updatedTime] = useState(currentTime);\r\n\r\n//     const loopfunc = () => {\r\n//         const currentTime = new Date().toLocaleTimeString();\r\n//         updatedTime(currentTime);\r\n//     }\r\n\r\n//     setInterval( loopfunc , 1000)\r\n\r\n//     return(\r\n//         <>\r\n//             <h1>{currTime}</h1>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n\r\nconst App = () => {\r\n    \r\n    const bgcolor = 'purple';\r\n    const [bg, updatedbg] = useState(bgcolor);\r\n\r\n    const bgChange = ()=>{\r\n       updatedbg('')\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div>\r\n            <button style={{backgroundColor:bgcolor}} onClick={bgChange}>Click Me</button> \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;;AAGpB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAMC,OAAO,GAAG,QAAQ;EACxB,MAAM,CAACC,EAAE,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACO,OAAO,CAAC;EAEzC,MAAMG,QAAQ,GAAGA,CAAA,KAAI;IAClBD,SAAS,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACIP,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACAT,OAAA;MAAAS,QAAA,eACIT,OAAA;QAAQU,KAAK,EAAE;UAACC,eAAe,EAACN;QAAO,CAAE;QAACO,OAAO,EAAEJ,QAAS;QAAAC,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC5E,iBACH;AAEX,CAAC;AAAAZ,EAAA,CAhBKD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAkBT,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}