{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactCourse\\\\SlotGame\\\\src\\\\TwoInputsForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// const TwoInputsForm = () =>{\n\n// const [text , settext] = useState('')\n// const [fulltext , updatedfulltext] = useState('')\n// const nameinp = (event)=>{\n//     settext(event.target.value);\n// }\n\n// const [degree, setdegree] = useState('')\n// const [fulldegree, updatedfulldegree] = useState('')\n// const degreeinput = (event) =>{\n//     setdegree(event.target.value);\n// }\n\n// const btnClk = () =>{\n//     updatedfulltext(text);\n//     updatedfulldegree(degree);\n// }\n\n// return(\n//     <>\n//     <div>\n//         <h1>Hello, {fulldegree} {fulltext}!</h1>\n//         <input placeholder=\"Enter Your Name\" type=\"text\" onChange={nameinp} value={text}></input>\n//         <input Placeholder=\"Enter Your Degree\" type=\"text\" onChange={degreeinput} value={degree}></input>\n//         <button onClick={btnClk}>Submit</button>\n//     </div>\n//     </>\n// );\n\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TwoInputsForm = () => {\n  _s();\n  const [text, settext] = useState('');\n  const [fulltext, updatedfulltext] = useState('');\n  const nameinp = event => {\n    settext(event.target.value);\n  };\n  const [degree, setdegree] = useState('');\n  const [fulldegree, updatedfulldegree] = useState('');\n  const degreeinput = event => {\n    setdegree(event.target.value);\n  };\n  const btnClk = () => {\n    updatedfulltext(text);\n    updatedfulldegree(degree);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      typeof: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello, \", fulldegree, \" \", fulltext, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Your Name\",\n          type: \"text\",\n          onChange: nameinp,\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          Placeholder: \"Enter Your Degree\",\n          type: \"text\",\n          onChange: degreeinput,\n          value: degree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: btnClk,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(TwoInputsForm, \"YQH1NLWbW5Z4N5u9koDaZMaUmU8=\");\n_c = TwoInputsForm;\nexport default TwoInputsForm;\nvar _c;\n$RefreshReg$(_c, \"TwoInputsForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TwoInputsForm","_s","text","settext","fulltext","updatedfulltext","nameinp","event","target","value","degree","setdegree","fulldegree","updatedfulldegree","degreeinput","btnClk","children","typeof","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","Placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/ReactCourse/SlotGame/src/TwoInputsForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// const TwoInputsForm = () =>{\r\n\r\n    // const [text , settext] = useState('')\r\n    // const [fulltext , updatedfulltext] = useState('')\r\n    // const nameinp = (event)=>{\r\n    //     settext(event.target.value);\r\n    // }\r\n    \r\n    // const [degree, setdegree] = useState('')\r\n    // const [fulldegree, updatedfulldegree] = useState('')\r\n    // const degreeinput = (event) =>{\r\n    //     setdegree(event.target.value);\r\n    // }\r\n\r\n    // const btnClk = () =>{\r\n    //     updatedfulltext(text);\r\n    //     updatedfulldegree(degree);\r\n    // }\r\n\r\n\r\n    // return(\r\n    //     <>\r\n    //     <div>\r\n    //         <h1>Hello, {fulldegree} {fulltext}!</h1>\r\n    //         <input placeholder=\"Enter Your Name\" type=\"text\" onChange={nameinp} value={text}></input>\r\n    //         <input Placeholder=\"Enter Your Degree\" type=\"text\" onChange={degreeinput} value={degree}></input>\r\n    //         <button onClick={btnClk}>Submit</button>\r\n    //     </div>\r\n    //     </>\r\n    // );\r\n\r\n// }\r\n\r\n\r\n\r\nconst TwoInputsForm = () =>{\r\n\r\n    const [text , settext] = useState('')\r\n    const [fulltext , updatedfulltext] = useState('')\r\n    const nameinp = (event)=>{\r\n        settext(event.target.value);\r\n    }\r\n    \r\n    const [degree, setdegree] = useState('')\r\n    const [fulldegree, updatedfulldegree] = useState('')\r\n    const degreeinput = (event) =>{\r\n        setdegree(event.target.value);\r\n    }\r\n\r\n    const btnClk = () =>{\r\n        updatedfulltext(text);\r\n        updatedfulldegree(degree);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        <form typeof=\"\">\r\n        <div>\r\n            <h1>Hello, {fulldegree} {fulltext}!</h1>\r\n            <input placeholder=\"Enter Your Name\" type=\"text\" onChange={nameinp} value={text}></input>\r\n            <input Placeholder=\"Enter Your Degree\" type=\"text\" onChange={degreeinput} value={degree}></input>\r\n            <button onClick={btnClk}>Submit</button>\r\n        </div>\r\n        </form>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default TwoInputsForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;;AAEI;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEJ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIA,MAAMC,aAAa,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAEvB,MAAM,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACS,QAAQ,EAAGC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAMW,OAAO,GAAIC,KAAK,IAAG;IACrBJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,UAAU,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMmB,WAAW,GAAIP,KAAK,IAAI;IAC1BI,SAAS,CAACJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAK;IAChBV,eAAe,CAACH,IAAI,CAAC;IACrBW,iBAAiB,CAACH,MAAM,CAAC;EAC7B,CAAC;EAGD,oBACIb,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACAnB,OAAA;MAAMoB,MAAM,EAAC,EAAE;MAAAD,QAAA,eACfnB,OAAA;QAAAmB,QAAA,gBACInB,OAAA;UAAAmB,QAAA,GAAI,SAAO,EAACJ,UAAU,EAAC,GAAC,EAACR,QAAQ,EAAC,GAAC;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxCxB,OAAA;UAAOyB,WAAW,EAAC,iBAAiB;UAACC,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAElB,OAAQ;UAACG,KAAK,EAAEP;QAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACzFxB,OAAA;UAAO4B,WAAW,EAAC,mBAAmB;UAACF,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAEV,WAAY;UAACL,KAAK,EAAEC;QAAO;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACjGxB,OAAA;UAAQ6B,OAAO,EAAEX,MAAO;UAAAC,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACtC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC,iBACJ;AAGX,CAAC;AAAApB,EAAA,CAjCKD,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}